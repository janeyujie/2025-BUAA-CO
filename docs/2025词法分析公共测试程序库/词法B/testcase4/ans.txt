CONSTTK const
INTTK int
IDENFR maxn
ASSIGN =
INTCON 200004
SEMICN ;
INTTK int
IDENFR N
COMMA ,
IDENFR V
SEMICN ;
INTTK int
IDENFR sum
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR dp
LBRACK [
INTCON 2003
RBRACK ]
SEMICN ;
INTTK int
IDENFR max
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a
GRE >
IDENFR b
RPARENT )
RETURNTK return
IDENFR a
SEMICN ;
RETURNTK return
IDENFR b
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR N
ASSIGN =
IDENFR getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR V
ASSIGN =
IDENFR getint
LPARENT (
RPARENT )
SEMICN ;
INTTK int
IDENFR i
COMMA ,
IDENFR j
SEMICN ;
INTTK int
IDENFR v
LBRACK [
IDENFR maxn
RBRACK ]
COMMA ,
IDENFR w
LBRACK [
IDENFR maxn
RBRACK ]
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
IDENFR i
LEQ <=
IDENFR N
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
INTTK int
IDENFR a
ASSIGN =
IDENFR getint
LPARENT (
RPARENT )
SEMICN ;
INTTK int
IDENFR b
ASSIGN =
IDENFR getint
LPARENT (
RPARENT )
SEMICN ;
INTTK int
IDENFR c
ASSIGN =
IDENFR getint
LPARENT (
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 1
SEMICN ;
IDENFR j
LEQ <=
IDENFR c
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
MULT *
INTCON 2
RPARENT )
LBRACE {
IDENFR v
LBRACK [
IDENFR sum
RBRACK ]
ASSIGN =
IDENFR j
MULT *
IDENFR a
SEMICN ;
IDENFR w
LBRACK [
IDENFR sum
RBRACK ]
ASSIGN =
IDENFR j
MULT *
IDENFR b
SEMICN ;
IDENFR sum
ASSIGN =
IDENFR sum
PLUS +
INTCON 1
SEMICN ;
IDENFR c
ASSIGN =
IDENFR c
MINU -
IDENFR j
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR c
RPARENT )
LBRACE {
IDENFR v
LBRACK [
IDENFR sum
RBRACK ]
ASSIGN =
IDENFR c
MULT *
IDENFR a
SEMICN ;
IDENFR w
LBRACK [
IDENFR sum
RBRACK ]
ASSIGN =
IDENFR c
MULT *
IDENFR b
SEMICN ;
IDENFR sum
ASSIGN =
IDENFR sum
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
IDENFR i
LEQ <=
IDENFR sum
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
FORTK for
LPARENT (
IDENFR j
ASSIGN =
IDENFR V
SEMICN ;
IDENFR j
GEQ >=
IDENFR v
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
MINU -
INTCON 1
RPARENT )
LBRACE {
IDENFR dp
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR max
LPARENT (
IDENFR dp
LBRACK [
IDENFR j
RBRACK ]
COMMA ,
IDENFR dp
LBRACK [
IDENFR j
MINU -
IDENFR v
LBRACK [
IDENFR i
RBRACK ]
RBRACK ]
PLUS +
IDENFR w
LBRACK [
IDENFR i
RBRACK ]
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "%d"
COMMA ,
IDENFR dp
LBRACK [
IDENFR V
RBRACK ]
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }